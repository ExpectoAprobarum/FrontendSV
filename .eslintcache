[{"C:\\Users\\Pantuflas\\Desktop\\App\\FrontendSV\\src\\App.js":"1","C:\\Users\\Pantuflas\\Desktop\\App\\FrontendSV\\src\\commons\\alerts\\toast.js":"2","C:\\Users\\Pantuflas\\Desktop\\App\\FrontendSV\\src\\commons\\players\\players.js":"3","C:\\Users\\Pantuflas\\Desktop\\App\\FrontendSV\\src\\index.js":"4","C:\\Users\\Pantuflas\\Desktop\\App\\FrontendSV\\src\\pages\\changeProfile\\changeProfile.js":"5","C:\\Users\\Pantuflas\\Desktop\\App\\FrontendSV\\src\\pages\\creategame\\PageCreateGame.js":"6","C:\\Users\\Pantuflas\\Desktop\\App\\FrontendSV\\src\\pages\\game\\chat\\sendmessage.js":"7","C:\\Users\\Pantuflas\\Desktop\\App\\FrontendSV\\src\\pages\\game\\chat\\windowChat.js":"8","C:\\Users\\Pantuflas\\Desktop\\App\\FrontendSV\\src\\pages\\game\\components\\Board.js":"9","C:\\Users\\Pantuflas\\Desktop\\App\\FrontendSV\\src\\pages\\game\\components\\CastSpell.js":"10","C:\\Users\\Pantuflas\\Desktop\\App\\FrontendSV\\src\\pages\\game\\components\\ChooseHeadmaster.js":"11","C:\\Users\\Pantuflas\\Desktop\\App\\FrontendSV\\src\\pages\\game\\components\\DiscardCard.js":"12","C:\\Users\\Pantuflas\\Desktop\\App\\FrontendSV\\src\\pages\\game\\components\\EmitProclamation.js":"13","C:\\Users\\Pantuflas\\Desktop\\App\\FrontendSV\\src\\pages\\game\\components\\GameOver.js":"14","C:\\Users\\Pantuflas\\Desktop\\App\\FrontendSV\\src\\pages\\game\\components\\PlayerList.js":"15","C:\\Users\\Pantuflas\\Desktop\\App\\FrontendSV\\src\\pages\\game\\components\\popupVote.js":"16","C:\\Users\\Pantuflas\\Desktop\\App\\FrontendSV\\src\\pages\\game\\components\\RolesCommonM.js":"17","C:\\Users\\Pantuflas\\Desktop\\App\\FrontendSV\\src\\pages\\game\\components\\ShowResultVote.js":"18","C:\\Users\\Pantuflas\\Desktop\\App\\FrontendSV\\src\\pages\\game\\components\\ShowRole.js":"19","C:\\Users\\Pantuflas\\Desktop\\App\\FrontendSV\\src\\pages\\game\\components\\spells\\AvadaKedavra.js":"20","C:\\Users\\Pantuflas\\Desktop\\App\\FrontendSV\\src\\pages\\game\\components\\spells\\Crucio.js":"21","C:\\Users\\Pantuflas\\Desktop\\App\\FrontendSV\\src\\pages\\game\\components\\spells\\Divination.js":"22","C:\\Users\\Pantuflas\\Desktop\\App\\FrontendSV\\src\\pages\\game\\components\\spells\\Imperius.js":"23","C:\\Users\\Pantuflas\\Desktop\\App\\FrontendSV\\src\\pages\\game\\components\\Vote.js":"24","C:\\Users\\Pantuflas\\Desktop\\App\\FrontendSV\\src\\pages\\game\\Game.js":"25","C:\\Users\\Pantuflas\\Desktop\\App\\FrontendSV\\src\\pages\\invite\\inviteJoin.js":"26","C:\\Users\\Pantuflas\\Desktop\\App\\FrontendSV\\src\\pages\\invite\\inviteURL.js":"27","C:\\Users\\Pantuflas\\Desktop\\App\\FrontendSV\\src\\pages\\joinagame\\Lists.js":"28","C:\\Users\\Pantuflas\\Desktop\\App\\FrontendSV\\src\\pages\\joinagame\\modal.js":"29","C:\\Users\\Pantuflas\\Desktop\\App\\FrontendSV\\src\\pages\\lobby\\Lobby.js":"30","C:\\Users\\Pantuflas\\Desktop\\App\\FrontendSV\\src\\pages\\login\\login.js":"31","C:\\Users\\Pantuflas\\Desktop\\App\\FrontendSV\\src\\pages\\register\\register.js":"32","C:\\Users\\Pantuflas\\Desktop\\App\\FrontendSV\\src\\pages\\verification\\verification.js":"33","C:\\Users\\Pantuflas\\Desktop\\App\\FrontendSV\\src\\principalpages\\createAndjoinAndChang.js":"34","C:\\Users\\Pantuflas\\Desktop\\App\\FrontendSV\\src\\principalpages\\registerAndlogin.js":"35"},{"size":1331,"mtime":1605530969779,"results":"36","hashOfConfig":"37"},{"size":2645,"mtime":1606747419651,"results":"38","hashOfConfig":"37"},{"size":680,"mtime":1605295778692,"results":"39","hashOfConfig":"37"},{"size":209,"mtime":1605201141669,"results":"40","hashOfConfig":"37"},{"size":4502,"mtime":1605614580908,"results":"41","hashOfConfig":"37"},{"size":3721,"mtime":1606422554754,"results":"42","hashOfConfig":"37"},{"size":1521,"mtime":1606747419658,"results":"43","hashOfConfig":"37"},{"size":1555,"mtime":1606747419660,"results":"44","hashOfConfig":"37"},{"size":2854,"mtime":1605614580909,"results":"45","hashOfConfig":"37"},{"size":2980,"mtime":1606608834451,"results":"46","hashOfConfig":"37"},{"size":2268,"mtime":1606747419661,"results":"47","hashOfConfig":"37"},{"size":2678,"mtime":1605482274292,"results":"48","hashOfConfig":"37"},{"size":2542,"mtime":1606608834452,"results":"49","hashOfConfig":"37"},{"size":890,"mtime":1606422554758,"results":"50","hashOfConfig":"37"},{"size":1298,"mtime":1605992393782,"results":"51","hashOfConfig":"37"},{"size":677,"mtime":1606422554760,"results":"52","hashOfConfig":"37"},{"size":3113,"mtime":1606753134824,"results":"53","hashOfConfig":"37"},{"size":5603,"mtime":1606690180836,"results":"54","hashOfConfig":"37"},{"size":2809,"mtime":1606422554759,"results":"55","hashOfConfig":"37"},{"size":1772,"mtime":1606747419663,"results":"56","hashOfConfig":"37"},{"size":4985,"mtime":1606747419665,"results":"57","hashOfConfig":"37"},{"size":3253,"mtime":1606608834456,"results":"58","hashOfConfig":"37"},{"size":1716,"mtime":1606747419666,"results":"59","hashOfConfig":"37"},{"size":1852,"mtime":1605482274299,"results":"60","hashOfConfig":"37"},{"size":5328,"mtime":1606748933797,"results":"61","hashOfConfig":"37"},{"size":4810,"mtime":1605482274302,"results":"62","hashOfConfig":"37"},{"size":709,"mtime":1605482274302,"results":"63","hashOfConfig":"37"},{"size":5623,"mtime":1606608834458,"results":"64","hashOfConfig":"37"},{"size":1328,"mtime":1605482274303,"results":"65","hashOfConfig":"37"},{"size":7435,"mtime":1606747419667,"results":"66","hashOfConfig":"37"},{"size":4175,"mtime":1606688806164,"results":"67","hashOfConfig":"37"},{"size":4265,"mtime":1605992393784,"results":"68","hashOfConfig":"37"},{"size":677,"mtime":1606419882971,"results":"69","hashOfConfig":"37"},{"size":1777,"mtime":1606137618279,"results":"70","hashOfConfig":"37"},{"size":1115,"mtime":1605482274311,"results":"71","hashOfConfig":"37"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"j8yotn",{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"109","messages":"110","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Pantuflas\\Desktop\\App\\FrontendSV\\src\\App.js",[],"C:\\Users\\Pantuflas\\Desktop\\App\\FrontendSV\\src\\commons\\alerts\\toast.js",[],"C:\\Users\\Pantuflas\\Desktop\\App\\FrontendSV\\src\\commons\\players\\players.js",[],"C:\\Users\\Pantuflas\\Desktop\\App\\FrontendSV\\src\\index.js",[],"C:\\Users\\Pantuflas\\Desktop\\App\\FrontendSV\\src\\pages\\changeProfile\\changeProfile.js",[],"C:\\Users\\Pantuflas\\Desktop\\App\\FrontendSV\\src\\pages\\creategame\\PageCreateGame.js",[],"C:\\Users\\Pantuflas\\Desktop\\App\\FrontendSV\\src\\pages\\game\\chat\\sendmessage.js",["150"],"import React,{useState} from 'react';\r\nimport axios from 'axios';\r\nimport configData from '../../../config.json';\r\nimport {notify_you_dead } from '../../../commons/alerts/toast'\r\nimport { getMyPlayer } from '../../../commons/players/players';\r\n\r\n\r\n\r\nconst SendMessage = ({gameId}) => {\r\n  const [msg, setMsg] = useState('')\r\n  \r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    getMyPlayer(gameId).then( response => {\r\n      const isAlaives = response.alive\r\n      if(isAlaives){\r\n        const usertoken = localStorage.getItem('user')\r\n        const infotosend = {\r\n          \"content\" : msg    \r\n        }\r\n        axios.post(configData.API_URL + '/games/' + gameId + '/messages', infotosend, {\r\n          headers: {\r\n            'Authorization': `Bearer ${JSON.parse(usertoken).access_token}` \r\n          }\r\n        }).then(response => { \r\n          if(response.status === 200){\r\n          setMsg('')\r\n          }\r\n        })\r\n        .catch(error => {\r\n          console.log(error)\r\n        })\r\n      }\r\n    })\r\n  } \r\n\r\n  const handleOnchange = (e) => {\r\n    if(e.target.name === \"message\"){\r\n      setMsg(e.target.value)\r\n    }\r\n  }\r\n\r\n  return( \r\n    <div>\r\n      <form onSubmit={onSubmit}>\r\n        <textarea  \r\n          type='text'\r\n          name='message'\r\n          placeholder='Write something'\r\n          value={msg}\r\n          onChange= {handleOnchange}\r\n          required\r\n        />\r\n        <button type='submit' >Send</button>\r\n      </form>\r\n    </div>\r\n  )\r\n\r\n}\r\nexport default SendMessage;","C:\\Users\\Pantuflas\\Desktop\\App\\FrontendSV\\src\\pages\\game\\chat\\windowChat.js",["151","152"],"import React,{useState, useEffect} from 'react';\r\nimport axios from 'axios';\r\nimport configData from '../../../config.json';\r\nimport { MessageBox, Avatar } from 'react-chat-elements'\r\nimport 'react-chat-elements/dist/main.css';\r\n\r\n\r\nconst WindowChat = ({gameId}) => {\r\n  const [messages, setMessages] = useState([]);\r\n  \r\n  useEffect(()=>{\r\n    const getMessages = () => {\r\n      const usertoken = localStorage.getItem('user');\r\n      axios.get(configData.API_URL + '/games/' + gameId + \"/messages\", {\r\n        headers: {\r\n            'Authorization': `Bearer ${JSON.parse(usertoken).access_token}`\r\n          }\r\n      })\r\n      .then(res => {\r\n        if(res.status === 200) {\r\n          console.log(\"ESTO TRAE EL BACK\", res)\r\n          \r\n          const response = res.data.data.map( messageAndPlayer => [messageAndPlayer.send_by.useralias, messageAndPlayer.content])\r\n          setMessages(...messages, response)\r\n        }\r\n      })\r\n      .catch(error => {\r\n        console.log( error)\r\n      })\r\n    }\r\n    const timer = setInterval(() => {\r\n      getMessages();\r\n    }, 2000);\r\n\r\n    return () => clearInterval(timer)\r\n  }, [])\r\n\r\n  \r\n\r\n  return(\r\n      messages.map(\r\n        entry =>\r\n          <div >\r\n            <MessageBox \r\n              title={entry[0]}\r\n              titleColor='red'\r\n              type='text'\r\n              text={entry[1]}\r\n              avatar = \"https://static.vecteezy.com/system/resources/previews/000/566/937/non_2x/vector-person-icon.jpg\"\r\n            />\r\n          </div>)\r\n  )\r\n\r\n}\r\n\r\nexport default WindowChat;","C:\\Users\\Pantuflas\\Desktop\\App\\FrontendSV\\src\\pages\\game\\components\\Board.js",[],"C:\\Users\\Pantuflas\\Desktop\\App\\FrontendSV\\src\\pages\\game\\components\\CastSpell.js",[],"C:\\Users\\Pantuflas\\Desktop\\App\\FrontendSV\\src\\pages\\game\\components\\ChooseHeadmaster.js",[],"C:\\Users\\Pantuflas\\Desktop\\App\\FrontendSV\\src\\pages\\game\\components\\DiscardCard.js",["153"],"import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport configData from '../../../config.json';\r\nimport { getMyPlayer } from '../../../commons/players/players';\r\nimport './DiscardCard.css';\r\n\r\nconst DiscardCard = ({gameId, ministerId}) => {\r\n  const [cards, setCards] = useState([]);\r\n  const [myPlayer, setMyPlayer] = useState({});\r\n\r\n  const getCards = () => {\r\n    const usertoken = localStorage.getItem('user');\r\n    axios.get(configData.API_URL + '/games/' + gameId + '/proclamations', {\r\n      headers: {\r\n          'Authorization': `Bearer ${JSON.parse(usertoken).access_token}` \r\n        }\r\n      })\r\n      .then(res => {\r\n        if(res.status === 200) {\r\n          setCards(res.data.data);\r\n        }\r\n      })\r\n      .catch(error => {\r\n        console.log(error)\r\n      })\r\n  }\r\n\r\n  const choose = (e) => {\r\n    let choice = e.target.className.split(' ')[0];\r\n    const usertoken = localStorage.getItem('user');\r\n    axios.post(configData.API_URL + '/games/' + gameId + '/proclamations',\r\n      { card: choice }, {\r\n        headers: {\r\n            'Authorization': `Bearer ${JSON.parse(usertoken).access_token}` \r\n          }\r\n        })\r\n      .then(res => {\r\n        if (res.status === 200) {\r\n          console.log(res.status);\r\n        }\r\n      })\r\n      .catch(error => {\r\n        console.log(error)\r\n      })\r\n\r\n    document.getElementById(\"proc1\").disabled = true;\r\n    document.getElementById(\"proc2\").disabled = true;\r\n    document.getElementById(\"proc3\").disabled = true;\r\n  }\r\n\r\n  useEffect(() => {\r\n    getMyPlayer(gameId)\r\n      .then(res => {\r\n        setMyPlayer(res)\r\n      });\r\n    getCards();\r\n  }, [])\r\n\r\n  return (\r\n    <div className=\"discard\">\r\n    { myPlayer.id === ministerId ? (\r\n        <div className=\"is-minister\">\r\n          <h2 className=\"header\">\r\n            Discard proclamation:\r\n          </h2>\r\n          <div className=\"cards\">\r\n            <button className={cards[0] + \" card left\"} id=\"proc1\"\r\n              onClick={(e) => {\r\n                choose(e)\r\n              }} \r\n            />\r\n            <button className={cards[1] + \" card center\"} id=\"proc2\"\r\n              onClick={(e) => {\r\n                choose(e)\r\n              }} \r\n            />\r\n            <button className={cards[2] + \" card right\"} id=\"proc3\"\r\n              onClick={(e) => {\r\n                choose(e)\r\n              }} \r\n            />\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div className=\"not-minister\">\r\n          <h2 className=\"header\">\r\n            Minister is discarding proclamation ...\r\n          </h2>\r\n        </div>\r\n      )\r\n    }   \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DiscardCard\r\n","C:\\Users\\Pantuflas\\Desktop\\App\\FrontendSV\\src\\pages\\game\\components\\EmitProclamation.js",[],"C:\\Users\\Pantuflas\\Desktop\\App\\FrontendSV\\src\\pages\\game\\components\\GameOver.js",[],"C:\\Users\\Pantuflas\\Desktop\\App\\FrontendSV\\src\\pages\\game\\components\\PlayerList.js",[],"C:\\Users\\Pantuflas\\Desktop\\App\\FrontendSV\\src\\pages\\game\\components\\popupVote.js",[],"C:\\Users\\Pantuflas\\Desktop\\App\\FrontendSV\\src\\pages\\game\\components\\RolesCommonM.js",["154","155","156","157","158"],"C:\\Users\\Pantuflas\\Desktop\\App\\FrontendSV\\src\\pages\\game\\components\\ShowResultVote.js",["159","160"],"import React, { useEffect, useState } from 'react';\r\nimport { getPlayers } from '../../../commons/players/players';\r\nimport PopupVote from './popupVote';\r\nimport lumos from '../assets/lumos.png';\r\nimport nox from '../assets/nox.png';\r\n\r\nconst ShowResultVote = ({gameId, gameInfo}) => {\r\n  const [players, setPlayers] = useState([]);\r\n  const [resultVote, setResultVote] = useState(\"\");\r\n  const [countVotes, setCountVotes] = useState([0, -1]);\r\n  const [showResult, setShowResult] = useState([false, 0]);\r\n  const [headM, setHeadM] = useState([])\r\n\r\n  const getP = () => {\r\n    getPlayers(gameId)\r\n      .then(res => {\r\n        setPlayers(res)\r\n      });\r\n  }\r\n\r\n  const searchCurrent2 = (e) => {\r\n    let resultVotePlayer\r\n    if (resultVote !== undefined) {\r\n      if (gameInfo.phase === 'propose') {\r\n        resultVotePlayer = \" \"\r\n      } else {\r\n        let h = resultVote.find(\r\n          playerR => playerR.player === e\r\n        )\r\n        resultVotePlayer = h != null ? h.vote : \" \"\r\n      }\r\n    }\r\n    return(resultVotePlayer)\r\n  }\r\n\r\n  useEffect(() => {\r\n    getP();\r\n  }, [gameInfo.phase]);\r\n\r\n  useEffect(() => {\r\n    if (gameInfo !== undefined && gameInfo.phase !== 'propose') {\r\n      if (gameInfo.phase !== 'propose') {\r\n        if (gameInfo.votes !== undefined && showResult[1] === 0) {\r\n          setResultVote(gameInfo.votes)\r\n          if (countVotes[0] < gameInfo.votes.length) {\r\n            const alivePlayers = players.filter((item) => item.alive)\r\n            setCountVotes([gameInfo.votes.length, alivePlayers.length])\r\n          } else if(countVotes[0] === countVotes[1] && showResult[1] === 0) {\r\n              setShowResult([true, 1])\r\n              let head = players.find(\r\n                  playerR => playerR.id === parseInt(gameInfo.headmaster)\r\n              )\r\n              let minister = players.find(\r\n                  playerR => playerR.id === parseInt(gameInfo.minister)\r\n              )\r\n              setHeadM([head, minister])\r\n              getP()\r\n              setTimeout(() => (\r\n                  setShowResult([false, 1])), 4000\r\n              )\r\n              setTimeout(() => (\r\n                  setCountVotes([0, -1])), 10000\r\n              )\r\n            }\r\n        }\r\n      }\r\n    } else if (gameInfo.phase === 'propose') {\r\n          setShowResult([false, 0])\r\n          setCountVotes([0, -1])\r\n          setHeadM([])\r\n    }\r\n  }, [gameInfo]);\r\n\r\n\r\n  return (\r\n    <div>\r\n      { showResult[0]\r\n        ? <PopupVote open={true} headM={headM}></PopupVote>\r\n        : \" \"\r\n      }\r\n      {players.sort(\r\n        function(a,b){\r\n          var x = a.id < b.id? -1:1;\r\n          return x\r\n        }).map( player =>\r\n          <div\r\n            className=\"fom-popup-BoxShadow custom game\"\r\n            style={ player.alive\r\n              ? {color: 'white'}\r\n              : {background: '#672A24', fontWeight: 'bold',\r\n                fontSize: '20px', opacity: '0.4'}\r\n            }\r\n            key={player.id}>\r\n            <div className=\"hDivPlayers cust\">\r\n              <div className=\"hDivPlayers votes\">\r\n                <li style={{fontWeight: 'bold'}}>\r\n                  {\r\n                    (() => {\r\n                      if (gameInfo !== undefined) {\r\n                        if (gameInfo.phase === 'propose') {\r\n                          if (player.current_position === 'minister') {\r\n                            return \"CAND. MINISTER\"\r\n                          }\r\n                        } else if (gameInfo.phase === 'vote') {\r\n                          if (parseInt(gameInfo.headmaster) === player.id) {\r\n                            return \"CAND. HEADMASTER\"\r\n                          }\r\n                          if (player.current_position === 'minister') {\r\n                            return \"CAND. MINISTER\"\r\n                          }\r\n                        } else {\r\n                            return (\r\n                              (player.current_position) !== \"\" ?\r\n                                (player.current_position).toUpperCase() :\r\n                                <p> </p>\r\n                            )\r\n                        }\r\n                      }\r\n                  })()\r\n                  }\r\n                </li>\r\n                <li style={player.alive\r\n                    ? {color: 'white'}\r\n                    : {fontWeight: 'bold', fontSize: '20px'}}>\r\n                    {player.user.useralias}\r\n                </li>\r\n              </div>\r\n              <div style={{}}>\r\n                { countVotes[0] === countVotes[1] ?\r\n                    (() => {\r\n                      if (resultVote !== \"\") {\r\n                        let result = searchCurrent2(player.id)\r\n                        if (result === true) {\r\n                          return (\r\n                            <img className=\"imgDivVote\"\r\n                              src={lumos}\r\n                              alt=\"lumos\"/>\r\n                          )\r\n                        } else if (result === \" \") {\r\n                          return (\r\n                            <p> </p>\r\n                          )\r\n                        } else if (result === false) {\r\n                          return (\r\n                            <img className=\"imgDivVote\"\r\n                              src={nox}\r\n                              alt=\"nox\"/>\r\n                          )\r\n                        }\r\n                      }\r\n                  })()\r\n                  : \"\"\r\n              }\r\n              </div>\r\n            </div>\r\n          </div>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\nexport default ShowResultVote\r\n","C:\\Users\\Pantuflas\\Desktop\\App\\FrontendSV\\src\\pages\\game\\components\\ShowRole.js",["161"],"import React, {useState, useEffect} from 'react';\r\nimport axios from 'axios';\r\nimport jwt_decode from 'jwt-decode';\r\nimport configData from '../../../config.json';\r\nimport './ShowRole.css'\r\nimport morti from '../assets/Wiborita.png';\r\nimport phoenix from '../assets/Fenix.png';\r\nimport volde from '../assets/moldem2.png';\r\n\r\nconst ShowRole = ({gameId, gameInfo}) => {\r\n  const [rolePlayer, setRolePlayer] = useState([])\r\n  const [meAlias, setMeAlias] = useState(\"\")\r\n\r\n  var idPlayer = 0\r\n  const usertoken = localStorage.getItem('user');\r\n  if(usertoken) {\r\n    idPlayer = jwt_decode(usertoken).sub.id;\r\n  }\r\n\r\n  useEffect(() => {\r\n    const getPlayers = () => {\r\n      const usertoken = localStorage.getItem('user')\r\n      axios.get(`${configData.API_URL}/games/${gameId}/players`, {\r\n          headers: {\r\n              'Authorization': `Bearer ${JSON.parse(usertoken).access_token}`\r\n          }\r\n      }).then(response => {\r\n        if(response.status === 200){\r\n          setRolePlayer(response.data.data.find(\r\n            player => player.user.id === idPlayer\r\n          ))\r\n          setMeAlias(response.data.data.find(\r\n            player => player.user.id === idPlayer\r\n          ).user.useralias)\r\n        }\r\n      })\r\n      .catch(error => {\r\n        console.log(error)\r\n      })\r\n    }\r\n\r\n    getPlayers()\r\n  }, [gameInfo.phase])\r\n\r\n  return(\r\n    <div className={rolePlayer.alive\r\n        ? `BoxShadow myRole cust`\r\n        : `BoxShadow myRole cust dead`\r\n      }>\r\n      { rolePlayer.is_voldemort\r\n        ? <div style={{position: 'relative'}}>\r\n            <img className=\"imgDivRole volde\" src={volde} alt=\"volde\" />\r\n          </div>\r\n        : null\r\n      }\r\n\r\n      <div className=\"hDivRole my\">\r\n        <li\r\n          className=\"hDivRole\"\r\n          style={{fontWeight: 'bold', fontSize: '20px', paddingTop: '8%'}}>\r\n          {`${meAlias}`}\r\n        </li>\r\n        <li\r\n          className=\"hDivRole\"\r\n          style={{paddingTop: '10%'}}>\r\n          {`${rolePlayer.role}`.toUpperCase()}\r\n        </li>\r\n        <li\r\n          style={{fontWeight: 'bold'}}\r\n          className=\"hDivRole\" >\r\n          { rolePlayer.is_voldemort\r\n            ? `Voldemort`\r\n            : \"\"\r\n          }\r\n        </li>\r\n      </div>\r\n      <div>\r\n        { (`${rolePlayer.role}`.toUpperCase() === \"PHOENIX ORDER\")\r\n          ? <img className=\"imgDivRole\" src={phoenix} alt=\"phoenix\" />\r\n          : <img className=\"imgDivRole\" src={morti} alt=\"morti\" />\r\n        }\r\n      </div>\r\n      { !rolePlayer.alive\r\n        ? <div className=\"BoxShadowDead dead\">\r\n            <li\r\n              className=\"hDivRoleDead\"\r\n              style={{fontWeight: 'bold', fontSize: '30px'}}>\r\n              DEAD\r\n            </li>\r\n          </div>\r\n        : null\r\n      }\r\n    </div>\r\n  )\r\n}\r\nexport default ShowRole;\r\n","C:\\Users\\Pantuflas\\Desktop\\App\\FrontendSV\\src\\pages\\game\\components\\spells\\AvadaKedavra.js",[],"C:\\Users\\Pantuflas\\Desktop\\App\\FrontendSV\\src\\pages\\game\\components\\spells\\Crucio.js",[],"C:\\Users\\Pantuflas\\Desktop\\App\\FrontendSV\\src\\pages\\game\\components\\spells\\Divination.js",[],"C:\\Users\\Pantuflas\\Desktop\\App\\FrontendSV\\src\\pages\\game\\components\\spells\\Imperius.js",[],"C:\\Users\\Pantuflas\\Desktop\\App\\FrontendSV\\src\\pages\\game\\components\\Vote.js",[],"C:\\Users\\Pantuflas\\Desktop\\App\\FrontendSV\\src\\pages\\game\\Game.js",["162"],"import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport configData from '../../config.json';\r\nimport ChooseHeadmaster from './components/ChooseHeadmaster';\r\nimport Vote from './components/Vote';\r\nimport DiscardCard from './components/DiscardCard';\r\nimport EmitProclamation from './components/EmitProclamation';\r\nimport CastSpell from './components/CastSpell';\r\nimport Board from './components/Board';\r\nimport ShowRole from './components/ShowRole';\r\nimport ShowResultVote from './components/ShowResultVote';\r\nimport GameOver from './components/GameOver';\r\nimport SendMessage from './chat/sendmessage'\r\nimport WindowChat from './chat/windowChat'\r\nimport { MessageList } from 'react-chat-elements'\r\nimport RolesCommonMort from './components/RolesCommonM'\r\nimport './Game.css';\r\n\r\nconst Game = ({gameId}) => {\r\n  const [gameStatus, setGameStatus] = useState({});\r\n  const [showChat, setShowChat] = useState(false)\r\n\r\n  const showtheChat = () =>{\r\n    setShowChat(true)\r\n  }\r\n\r\n  const closetheChat= () => {\r\n    setShowChat(false)\r\n  }\r\n\r\n  useEffect(() => {\r\n    const getGameStatus = () => {\r\n      const usertoken = localStorage.getItem('user');\r\n      axios.get(configData.API_URL + '/games/' + gameId + \"/status\", {\r\n        headers: {\r\n            'Authorization': `Bearer ${JSON.parse(usertoken).access_token}`\r\n          }\r\n      })\r\n      .then(res => {\r\n        if(res.status === 200) {\r\n          setGameStatus(res.data);\r\n        }\r\n      })\r\n      .catch(error => {\r\n        console.log(error)\r\n      })\r\n    }\r\n\r\n    const timer = setInterval(() => {\r\n      getGameStatus();\r\n    }, 2000);\r\n\r\n    return () => clearInterval(timer)\r\n  }, [gameId])\r\n\r\n  return (\r\n    <div className=\"Game\">\r\n      <div className=\"info\">\r\n        <div className=\"game-phase\">\r\n          <h2>Game phase:</h2>\r\n          <h3>\r\n            { gameStatus !== undefined ? (\r\n              gameStatus.winner === undefined ? (\r\n                gameStatus.phase !== undefined ? (\r\n                  gameStatus.phase.toUpperCase()\r\n                ) : (\r\n                    \" \"\r\n                )\r\n              ) : \"GAME OVER\"\r\n            ) : \" \" }\r\n          </h3>\r\n        </div>\r\n        <div className=\"role\">\r\n          <div className=\"role-container\">\r\n            <ShowRole gameId={gameId} gameInfo={gameStatus}/>\r\n          </div>\r\n        </div>\r\n        <ShowResultVote\r\n          gameId={gameId}\r\n          gameInfo={gameStatus}\r\n        />\r\n  \r\n        { showChat ?  \r\n          <div> \r\n            <div className='showmeMessageChat'>\r\n              <WindowChat  \r\n                gameId={gameId} \r\n              />\r\n            </div>  \r\n            <div className='sendMsessageChat'>\r\n              <SendMessage\r\n                gameId={gameId}\r\n              />\r\n            </div>\r\n            <button  onClick={closetheChat} className='closeChat'></button> \r\n          </div>\r\n        : \r\n        <button  onClick={showtheChat} className='showChat'></button>  \r\n        }\r\n        <div >\r\n          <RolesCommonMort\r\n            gameId={gameId} /> \r\n        </div>\r\n      </div>\r\n      <div className=\"board\">\r\n        <Board\r\n          gameId={gameId}\r\n        />\r\n      </div>\r\n      <div className=\"phase\"> \r\n        {\r\n          gameStatus ? (\r\n            gameStatus.winner === undefined ? (\r\n              gameStatus.phase === 'propose' ? (\r\n                <div>\r\n                  <ChooseHeadmaster\r\n                    gameId={gameId}\r\n                    ministerId={gameStatus.minister}\r\n                  />\r\n                </div>\r\n              ) : (\r\n                gameStatus.phase === 'vote' ? (\r\n                  <div>\r\n                    <Vote\r\n                      gameId={gameId}\r\n                    />\r\n                  </div>\r\n                ) : (\r\n                  gameStatus.phase === 'headmaster play' ? (\r\n                    <div>\r\n                      <EmitProclamation\r\n                        gameId={gameId}\r\n                        headmasterId={gameStatus.headmaster}\r\n                      />\r\n                    </div>\r\n                  ) : (\r\n                    gameStatus.phase === 'spell play' ? (\r\n                      <div>\r\n                        <CastSpell\r\n                          gameId={gameId}\r\n                          ministerId={gameStatus.minister}\r\n                        />\r\n                      </div>\r\n                    ) : (\r\n                      gameStatus.phase === 'minister play' ? (\r\n                        <div>\r\n                          <DiscardCard\r\n                            gameId={gameId}\r\n                            ministerId={gameStatus.minister}\r\n                          />\r\n                        </div>\r\n                      ) : (\r\n                        <p>Awaiting response...</p>\r\n                      )\r\n                    )\r\n                  )\r\n                )\r\n              )\r\n            ) : (\r\n              <div className=\"game-over\">\r\n                <GameOver\r\n                  winner={gameStatus.winner}\r\n                  reason={gameStatus.detail}\r\n                />\r\n              </div>\r\n            )\r\n          ) : (\r\n            <h1 className=\"startingGame\">Starting Game ...</h1>\r\n          )\r\n        }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Game\r\n","C:\\Users\\Pantuflas\\Desktop\\App\\FrontendSV\\src\\pages\\invite\\inviteJoin.js",["163"],"import React, {useState, useEffect} from 'react';\r\nimport { Link } from 'react-router-dom'; // prueba\r\nimport axios from 'axios';\r\nimport jwt_decode from 'jwt-decode';\r\nimport configData from '../../config.json';\r\n\r\nconst InviteJoin = ({gameJoin}) => {\r\n  const [initPartida, setInitPartida] = useState(false);\r\n  const [gameInfo, setGameInfo] = useState([]);\r\n  const [countPlayer, setCountPlayer] = useState(0);\r\n  const [error, setError] = useState([false, '']);\r\n  const [listPlayers, setListPlayers] = useState([]);\r\n\r\n  var idPlayer = 0\r\n  const usertoken = localStorage.getItem('user');\r\n  if(usertoken) {\r\n    idPlayer = jwt_decode(usertoken).sub.id;\r\n  }\r\n\r\n  const getPlayers = (e) => {\r\n      axios.get(`${configData.API_URL}/games/${gameJoin}/players`, {\r\n        headers: {\r\n          'Authorization': `Bearer ${JSON.parse(usertoken).access_token}`\r\n        }\r\n      }).then(response => {\r\n        if(response.status === 200){\r\n          setCountPlayer(response.data.data.length)\r\n          setListPlayers(response.data.data)\r\n          let lengthGame = response.data.data.length\r\n          let maxPlayerG = e.player_amount\r\n\r\n          let doIExist = [response.data.data.find(\r\n                            player => player.user.id === idPlayer)]\r\n                         .includes(undefined)\r\n\r\n          if (lengthGame === maxPlayerG) {\r\n            if (e.created_by !== idPlayer && doIExist) {\r\n              setError([true, \"Full room\"])\r\n            }\r\n          }\r\n        }\r\n      }).catch(error => {\r\n        if (error) {\r\n          console.log(\"Error 401 Player\");\r\n        }\r\n      })\r\n  }\r\n\r\n  useEffect(() => {\r\n    let join = usertoken !== null\r\n    let init = false\r\n    if (join) {\r\n      const getGameInfo = () => {\r\n        const usertoken = localStorage.getItem('user')\r\n        axios.get(`${configData.API_URL}/games/${gameJoin}`, {\r\n          headers: {\r\n            'Authorization': `Bearer ${JSON.parse(usertoken).access_token}`\r\n          }\r\n        })\r\n        .then(res => {\r\n          // console.log(res)\r\n          if(res.status === 200) {\r\n            setGameInfo(res.data)\r\n            setInitPartida(res.data.started)\r\n\r\n            init = res.data.started\r\n            getPlayers(res.data)\r\n            if (init) {\r\n              setError([true, \"Game stated\"])\r\n            }\r\n          }\r\n        }).catch(error => {\r\n          if (error) {\r\n            console.log(\"Error 401 Info\");\r\n          }\r\n        });\r\n      }\r\n      getGameInfo()\r\n    }\r\n  },[initPartida])\r\n\r\n  const jGame = () => {\r\n    let join = usertoken !== null\r\n    if (join) {\r\n      let lengthGame = countPlayer\r\n      let maxPlayerG = gameInfo.player_amount\r\n      let doIExist = [listPlayers.find(\r\n                        player => player.user.id === idPlayer)]\r\n                     .includes(undefined)\r\n\r\n      if (lengthGame !== maxPlayerG) {\r\n        if (gameInfo.created_by !== idPlayer && doIExist) {\r\n          const usertoken = localStorage.getItem('user')\r\n\r\n          axios.post(`${configData.API_URL}/games/${gameJoin}/join`,({}),{\r\n            headers: {\r\n              'Authorization': `Bearer ${JSON.parse(usertoken).access_token}`\r\n            }\r\n          }).then(response => {\r\n            if (response.status === 200) {\r\n              const response_id = response.data\r\n              console.log(response_id);\r\n            }\r\n          })\r\n          .catch(error => {\r\n            console.log(error)\r\n          })\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"modal\">\r\n          <div className=\"modal-main\">\r\n            <div>\r\n              <h2>{`Game: ${gameInfo.name}`}</h2>\r\n              <p>{`Players: ${countPlayer}/${gameInfo.player_amount}`}</p>\r\n              <p className= \"pCustom\" style={{fontSize:\"18px\", color: \"red\"}}>\r\n                {error[0] ? error[1] : \"_\"}\r\n              </p>\r\n              <div style={{paddingTop: \"18px\"}}>\r\n                { error[0] ?\r\n                  \"\"\r\n                  : (<button className=\"buttonFound bttmodal\" onClick={jGame}>\r\n                        <Link className=\"linked\" to={{\r\n                            pathname: '/game',\r\n                            state: {\r\n                                gameId: gameJoin\r\n                            }\r\n                        }}>Join</Link>\r\n                      </button>)\r\n                }\r\n                <button className=\"buttonFound bttmodal\">\r\n                  <Link className=\"linked\" to={{\r\n                      pathname: '/home',\r\n                      state: {\r\n                          gameId: gameJoin\r\n                      }\r\n                  }}>Close</Link>\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\nexport default InviteJoin;\r\n","C:\\Users\\Pantuflas\\Desktop\\App\\FrontendSV\\src\\pages\\invite\\inviteURL.js",[],"C:\\Users\\Pantuflas\\Desktop\\App\\FrontendSV\\src\\pages\\joinagame\\Lists.js",[],"C:\\Users\\Pantuflas\\Desktop\\App\\FrontendSV\\src\\pages\\joinagame\\modal.js",[],"C:\\Users\\Pantuflas\\Desktop\\App\\FrontendSV\\src\\pages\\lobby\\Lobby.js",["164","165","166"],"import React, {useState, useEffect} from 'react';\r\nimport { Redirect } from 'react-router';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\nimport jwt_decode from 'jwt-decode';\r\nimport {CopyToClipboard} from 'react-copy-to-clipboard';\r\nimport configData from '../../config.json';\r\nimport Game from '../game/Game'\r\nimport './LobbyStyles.css'\r\nimport '../joinagame/styleSearch.css'\r\n\r\nconst LobbyPage = (props) => {\r\n  const [listPlayers, setListPlayers] = useState([]);\r\n  const [initPartida, setInitPartida]= useState(false);\r\n  const [nameGame, setNameGame] = useState('')\r\n  const [endGame, setEndGame]= useState(false);\r\n  const [userCreate, setUserCreate] = useState(0);\r\n  const [countPlayer, setCountPlayer]= useState(0);\r\n  const [message, setMessage] = useState('');\r\n  const [copySuccess, setCopySuccess] = useState('');\r\n  const [copyState, setCopyState] = useState(false);\r\n\r\n  let idGame = parseInt(props.location.state.gameId);\r\n\r\n  var idPlayer = 0\r\n  const usertoken = localStorage.getItem('user');\r\n  if(usertoken) {\r\n    idPlayer = jwt_decode(usertoken).sub.id;\r\n  }\r\n\r\n  useEffect(() => {\r\n    const getPlayers = () => {\r\n      axios.get(`${configData.API_URL}/games/${idGame}/players`, {\r\n          headers: {\r\n              'Authorization': `Bearer ${JSON.parse(usertoken).access_token}`\r\n          }\r\n      }).then(response => {\r\n        if(response.status === 200){\r\n          setListPlayers(response.data.data)\r\n          setCountPlayer(response.data.data.length)\r\n        }\r\n      })\r\n      .catch(error => {\r\n        setEndGame(true)\r\n      })\r\n    }\r\n\r\n    const timer = setInterval(() => {\r\n      getPlayers();\r\n      if (initPartida) {\r\n        clearInterval(timer);\r\n      }\r\n    }, 2000);\r\n\r\n    return () => clearInterval(timer)\r\n  }, [initPartida])\r\n\r\n  useEffect(() => {\r\n    const getGameInfo = () => {\r\n        axios.get(`${configData.API_URL}/games/${idGame}`, {\r\n          headers: {\r\n            'Authorization': `Bearer ${JSON.parse(usertoken).access_token}`\r\n          }\r\n        })\r\n        .then(res => {\r\n          if(res.status === 200) {\r\n            setInitPartida(res.data.started)\r\n            setUserCreate(res.data.created_by)\r\n            setNameGame(res.data.name)\r\n          }\r\n        }).catch( error => {\r\n          setEndGame(true)\r\n        })\r\n    }\r\n    const timer = setInterval(() => {\r\n      getGameInfo();\r\n      if (initPartida) {\r\n        clearInterval(timer);\r\n      }\r\n    }, 2000);\r\n\r\n    return () => clearInterval(timer)\r\n  }, [initPartida])\r\n\r\n  const gameStart = () => {\r\n    if (countPlayer >= 1) {\r\n      axios.post(`${configData.API_URL}/games/${idGame}/start`,({}),{\r\n        headers: {\r\n          'Authorization': `Bearer ${JSON.parse(usertoken).access_token}`\r\n        }\r\n      }).catch(error => {\r\n        console.log(error)\r\n      })\r\n    } else {\r\n      setMessage(\"Insufficient players, the minimum is 5\")\r\n      setTimeout(\r\n        () => setMessage(\" \"), 4500\r\n      );\r\n    }\r\n  }\r\n\r\n  const exitLobby = () => {\r\n    if (idPlayer === userCreate) {\r\n      endUserCreate()\r\n    } else {\r\n      axios.post(`${configData.API_URL}/games/${idGame}/exit`,({}),{\r\n        headers: {\r\n          'Authorization': `Bearer ${JSON.parse(usertoken).access_token}`\r\n        }\r\n      }).catch(error => {\r\n        console.log(error)\r\n      })\r\n    }\r\n  }\r\n\r\n  const endUserCreate = () => {\r\n    axios.delete(`${configData.API_URL}/games/${idGame}/delete`, {\r\n      headers: {\r\n        'Authorization': `Bearer ${JSON.parse(usertoken).access_token}`\r\n      }\r\n    }).then(response => {\r\n      if(response.status === 200){\r\n        setEndGame(true)\r\n      }\r\n    })\r\n    .catch(error => {\r\n      console.log(error)\r\n    })\r\n  }\r\n\r\n  useEffect(() => {\r\n    setCopySuccess(`http://localhost:3000/game/invite?game=${idGame}`)\r\n  }, [idPlayer])\r\n\r\n  const copyToClipboard = () => {\r\n    console.log(copyState);\r\n    setCopyState(!copyState)\r\n    setTimeout(\r\n      () => setCopyState(false), 1500\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      { endGame ? <Redirect to=\"/home\" /> :\r\n        ( initPartida ?\r\n          <div>\r\n            <Game gameId={parseInt(props.location.state.gameId)}/>\r\n          </div>\r\n          : <div>\r\n              <div className=\"divContentTittle\">\r\n                <div className=\"divCreateJoin tittle\">\r\n                  <div className=\"topBar\">\r\n                    <div className=\"dropdown prim home back\">\r\n                      <button className=\"dropbtn\">Menu\r\n                        <i className=\"fa fa-caret-down\"></i>\r\n                      </button>\r\n                      <div className=\"dropdown-content\">\r\n                        <div>\r\n                          <Link\r\n                            className=\"liStyle hom\"\r\n                            to=\"/home\">\r\n                            {'Home'}\r\n                          </Link>\r\n                        </div>\r\n                        <div>\r\n                          <Link\r\n                            className=\"liStyle hom\"\r\n                            onClick={exitLobby}\r\n                            to=\"/home\">\r\n                            Exit Game\r\n                          </Link>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div\r\n                    className={\r\n                      \"divContentTittle url\" + (copyState ? ' copied' : '')\r\n                    }\r\n                    style={{resize: \"none\"}}>\r\n                    <p className=\"pUrl\">\r\n                      Invite: {copySuccess}\r\n                    </p>\r\n                    <CopyToClipboard text={copySuccess}>\r\n                      <button\r\n                        onClick={copyToClipboard}\r\n                        className=\"buttonInvi\">\r\n                        { copyState ? \"Copied\" : \"Copy\" }\r\n                      </button>\r\n                    </CopyToClipboard>\r\n                  </div>\r\n\r\n                </div>\r\n              </div>\r\n\r\n              <h1 className=\"h1TittleLobby title\">Lobby {nameGame}</h1>\r\n              <h4 className=\"h1TittleLobby error\">{message}</h4>\r\n              <div className=\"divCreateJoin lobby-1\">\r\n                {userCreate === idPlayer\r\n                  ? <div className=\"button-container-1 button lobby\">\r\n                      <span className=\"mas\">Start Game</span>\r\n                      <button\r\n                        id=\"work\"\r\n                        type=\"button\"\r\n                        name=\"Hover\"\r\n                        onClick={gameStart}>\r\n                          Start Game\r\n                      </button>\r\n                    </div>\r\n                  : <h3 className = \"divWaiting\">Waiting to start</h3>\r\n                 }\r\n              </div>\r\n              <label>\r\n              <div className=\"divCreateJoin lobby\">\r\n                { listPlayers.sort(\r\n                    function (a,b) {\r\n                      var x = a.id < b.id? -1:1;\r\n                      return x\r\n                    }).map( player =>\r\n                      <li\r\n                        key={player.user.id}\r\n                        className=\"liStyle fom-popup-BoxShadow custom\">\r\n                          {player.user.username}\r\n                      </li>\r\n                  )}\r\n              </div>\r\n              </label>\r\n          </div>\r\n        )\r\n      }\r\n      </div>\r\n  )\r\n}\r\nexport default LobbyPage;\r\n","C:\\Users\\Pantuflas\\Desktop\\App\\FrontendSV\\src\\pages\\login\\login.js",[],"C:\\Users\\Pantuflas\\Desktop\\App\\FrontendSV\\src\\pages\\register\\register.js",[],"C:\\Users\\Pantuflas\\Desktop\\App\\FrontendSV\\src\\pages\\verification\\verification.js",[],"C:\\Users\\Pantuflas\\Desktop\\App\\FrontendSV\\src\\principalpages\\createAndjoinAndChang.js",[],"C:\\Users\\Pantuflas\\Desktop\\App\\FrontendSV\\src\\principalpages\\registerAndlogin.js",[],{"ruleId":"167","severity":1,"message":"168","line":4,"column":9,"nodeType":"169","messageId":"170","endLine":4,"endColumn":24},{"ruleId":"167","severity":1,"message":"171","line":4,"column":22,"nodeType":"169","messageId":"170","endLine":4,"endColumn":28},{"ruleId":"172","severity":1,"message":"173","line":36,"column":6,"nodeType":"174","endLine":36,"endColumn":8,"suggestions":"175"},{"ruleId":"172","severity":1,"message":"176","line":57,"column":6,"nodeType":"174","endLine":57,"endColumn":8,"suggestions":"177"},{"ruleId":"167","severity":1,"message":"178","line":2,"column":8,"nodeType":"169","messageId":"170","endLine":2,"endColumn":13},{"ruleId":"167","severity":1,"message":"179","line":13,"column":10,"nodeType":"169","messageId":"170","endLine":13,"endColumn":28},{"ruleId":"172","severity":1,"message":"180","line":53,"column":6,"nodeType":"174","endLine":53,"endColumn":8,"suggestions":"181"},{"ruleId":"182","severity":1,"message":"183","line":63,"column":19,"nodeType":"184","endLine":65,"endColumn":21},{"ruleId":"182","severity":1,"message":"183","line":75,"column":19,"nodeType":"184","endLine":77,"endColumn":21},{"ruleId":"172","severity":1,"message":"185","line":38,"column":6,"nodeType":"174","endLine":38,"endColumn":22,"suggestions":"186"},{"ruleId":"172","severity":1,"message":"187","line":72,"column":6,"nodeType":"174","endLine":72,"endColumn":16,"suggestions":"188"},{"ruleId":"172","severity":1,"message":"189","line":43,"column":6,"nodeType":"174","endLine":43,"endColumn":22,"suggestions":"190"},{"ruleId":"167","severity":1,"message":"191","line":15,"column":10,"nodeType":"169","messageId":"170","endLine":15,"endColumn":21},{"ruleId":"172","severity":1,"message":"192","line":80,"column":5,"nodeType":"174","endLine":80,"endColumn":18,"suggestions":"193"},{"ruleId":"172","severity":1,"message":"194","line":56,"column":6,"nodeType":"174","endLine":56,"endColumn":19,"suggestions":"195"},{"ruleId":"172","severity":1,"message":"194","line":83,"column":6,"nodeType":"174","endLine":83,"endColumn":19,"suggestions":"196"},{"ruleId":"172","severity":1,"message":"197","line":133,"column":6,"nodeType":"174","endLine":133,"endColumn":16,"suggestions":"198"},"no-unused-vars","'notify_you_dead' is defined but never used.","Identifier","unusedVar","'Avatar' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'gameId' and 'messages'. Either include them or remove the dependency array. You can also do a functional update 'setMessages(m => ...)' if you only need 'messages' in the 'setMessages' call.","ArrayExpression",["199"],"React Hook useEffect has missing dependencies: 'gameId' and 'getCards'. Either include them or remove the dependency array.",["200"],"'axios' is defined but never used.","'numberOfPlayerMort' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'gameId' and 'myid'. Either include them or remove the dependency array.",["201"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has a missing dependency: 'getP'. Either include it or remove the dependency array.",["202"],"React Hook useEffect has missing dependencies: 'countVotes', 'getP', 'players', and 'showResult'. Either include them or remove the dependency array.",["203"],"React Hook useEffect has missing dependencies: 'gameId' and 'idPlayer'. Either include them or remove the dependency array.",["204"],"'MessageList' is defined but never used.","React Hook useEffect has missing dependencies: 'gameJoin', 'getPlayers', and 'usertoken'. Either include them or remove the dependency array.",["205"],"React Hook useEffect has missing dependencies: 'idGame' and 'usertoken'. Either include them or remove the dependency array.",["206"],["207"],"React Hook useEffect has a missing dependency: 'idGame'. Either include it or remove the dependency array.",["208"],{"desc":"209","fix":"210"},{"desc":"211","fix":"212"},{"desc":"213","fix":"214"},{"desc":"215","fix":"216"},{"desc":"217","fix":"218"},{"desc":"219","fix":"220"},{"desc":"221","fix":"222"},{"desc":"223","fix":"224"},{"desc":"223","fix":"225"},{"desc":"226","fix":"227"},"Update the dependencies array to be: [gameId, messages]",{"range":"228","text":"229"},"Update the dependencies array to be: [gameId, getCards]",{"range":"230","text":"231"},"Update the dependencies array to be: [gameId, myid]",{"range":"232","text":"233"},"Update the dependencies array to be: [gameInfo.phase, getP]",{"range":"234","text":"235"},"Update the dependencies array to be: [countVotes, gameInfo, getP, players, showResult]",{"range":"236","text":"237"},"Update the dependencies array to be: [gameId, gameInfo.phase, idPlayer]",{"range":"238","text":"239"},"Update the dependencies array to be: [gameJoin, getPlayers, initPartida, usertoken]",{"range":"240","text":"241"},"Update the dependencies array to be: [idGame, initPartida, usertoken]",{"range":"242","text":"243"},{"range":"244","text":"243"},"Update the dependencies array to be: [idGame, idPlayer]",{"range":"245","text":"246"},[1131,1133],"[gameId, messages]",[1660,1662],"[gameId, getCards]",[1792,1794],"[gameId, myid]",[1085,1101],"[gameInfo.phase, getP]",[2390,2400],"[countVotes, gameInfo, getP, players, showResult]",[1326,1342],"[gameId, gameInfo.phase, idPlayer]",[2500,2513],"[gameJoin, getPlayers, initPartida, usertoken]",[1789,1802],"[idGame, initPartida, usertoken]",[2519,2532],[3817,3827],"[idGame, idPlayer]"]