[{"/home/leandro/MyStuff/React/this_secretV_clean/FrontendSV/src/App.js":"1","/home/leandro/MyStuff/React/this_secretV_clean/FrontendSV/src/commons/alerts/toast.js":"2","/home/leandro/MyStuff/React/this_secretV_clean/FrontendSV/src/commons/players/players.js":"3","/home/leandro/MyStuff/React/this_secretV_clean/FrontendSV/src/index.js":"4","/home/leandro/MyStuff/React/this_secretV_clean/FrontendSV/src/pages/changeProfile/changeProfile.js":"5","/home/leandro/MyStuff/React/this_secretV_clean/FrontendSV/src/pages/creategame/PageCreateGame.js":"6","/home/leandro/MyStuff/React/this_secretV_clean/FrontendSV/src/pages/game/Game.js":"7","/home/leandro/MyStuff/React/this_secretV_clean/FrontendSV/src/pages/game/components/Board.js":"8","/home/leandro/MyStuff/React/this_secretV_clean/FrontendSV/src/pages/game/components/CastSpell.js":"9","/home/leandro/MyStuff/React/this_secretV_clean/FrontendSV/src/pages/game/components/ChooseHeadmaster.js":"10","/home/leandro/MyStuff/React/this_secretV_clean/FrontendSV/src/pages/game/components/DiscardCard.js":"11","/home/leandro/MyStuff/React/this_secretV_clean/FrontendSV/src/pages/game/components/EmitProclamation.js":"12","/home/leandro/MyStuff/React/this_secretV_clean/FrontendSV/src/pages/game/components/GameOver.js":"13","/home/leandro/MyStuff/React/this_secretV_clean/FrontendSV/src/pages/game/components/PlayerList.js":"14","/home/leandro/MyStuff/React/this_secretV_clean/FrontendSV/src/pages/game/components/ShowRole.js":"15","/home/leandro/MyStuff/React/this_secretV_clean/FrontendSV/src/pages/game/components/Vote.js":"16","/home/leandro/MyStuff/React/this_secretV_clean/FrontendSV/src/pages/game/components/spells/AvadaKedavra.js":"17","/home/leandro/MyStuff/React/this_secretV_clean/FrontendSV/src/pages/game/components/spells/Divination.js":"18","/home/leandro/MyStuff/React/this_secretV_clean/FrontendSV/src/pages/invite/inviteJoin.js":"19","/home/leandro/MyStuff/React/this_secretV_clean/FrontendSV/src/pages/invite/inviteURL.js":"20","/home/leandro/MyStuff/React/this_secretV_clean/FrontendSV/src/pages/joinagame/Lists.js":"21","/home/leandro/MyStuff/React/this_secretV_clean/FrontendSV/src/pages/joinagame/modal.js":"22","/home/leandro/MyStuff/React/this_secretV_clean/FrontendSV/src/pages/lobby/Lobby.js":"23","/home/leandro/MyStuff/React/this_secretV_clean/FrontendSV/src/pages/login/login.js":"24","/home/leandro/MyStuff/React/this_secretV_clean/FrontendSV/src/pages/register/register.js":"25","/home/leandro/MyStuff/React/this_secretV_clean/FrontendSV/src/principalpages/createAndjoinAndChang.js":"26","/home/leandro/MyStuff/React/this_secretV_clean/FrontendSV/src/principalpages/registerAndlogin.js":"27","/home/leandro/MyStuff/React/this_secretV_clean/FrontendSV/src/pages/game/components/ShowResultVote.js":"28","/home/leandro/MyStuff/React/this_secretV_clean/FrontendSV/src/pages/game/components/popupVote.js":"29","/home/leandro/MyStuff/React/this_secretV_clean/FrontendSV/src/pages/verification/verification.js":"30","/home/leandro/MyStuff/React/this_secretV_clean/FrontendSV/src/pages/game/components/spells/Crucio.js":"31","/home/leandro/MyStuff/React/this_secretV_clean/FrontendSV/src/pages/game/components/spells/Imperius.js":"32","/home/leandro/MyStuff/React/this_secretV_clean/FrontendSV/src/pages/game/chat/sendmessage.js":"33","/home/leandro/MyStuff/React/this_secretV_clean/FrontendSV/src/pages/game/chat/windowChat.js":"34","/home/leandro/MyStuff/React/this_secretV_clean/FrontendSV/src/pages/game/components/popupChaos.js":"35"},{"size":1299,"mtime":1606222509057,"results":"36","hashOfConfig":"37"},{"size":2406,"mtime":1606576339234,"results":"38","hashOfConfig":"37"},{"size":658,"mtime":1605555717326,"results":"39","hashOfConfig":"37"},{"size":198,"mtime":1605555717326,"results":"40","hashOfConfig":"37"},{"size":4367,"mtime":1606222509105,"results":"41","hashOfConfig":"37"},{"size":3604,"mtime":1606607688447,"results":"42","hashOfConfig":"37"},{"size":5934,"mtime":1606685259066,"results":"43","hashOfConfig":"37"},{"size":3621,"mtime":1606684566473,"results":"44","hashOfConfig":"37"},{"size":2880,"mtime":1606608716099,"results":"45","hashOfConfig":"37"},{"size":2187,"mtime":1606676035956,"results":"46","hashOfConfig":"37"},{"size":2582,"mtime":1605555717354,"results":"47","hashOfConfig":"37"},{"size":2452,"mtime":1606608716099,"results":"48","hashOfConfig":"37"},{"size":856,"mtime":1606576339234,"results":"49","hashOfConfig":"37"},{"size":1254,"mtime":1606222509213,"results":"50","hashOfConfig":"37"},{"size":2713,"mtime":1606607688451,"results":"51","hashOfConfig":"37"},{"size":1785,"mtime":1606222509253,"results":"52","hashOfConfig":"37"},{"size":1709,"mtime":1606676035956,"results":"53","hashOfConfig":"37"},{"size":3139,"mtime":1606608716103,"results":"54","hashOfConfig":"37"},{"size":4660,"mtime":1606222509265,"results":"55","hashOfConfig":"37"},{"size":679,"mtime":1605555717358,"results":"56","hashOfConfig":"37"},{"size":5432,"mtime":1606607688451,"results":"57","hashOfConfig":"37"},{"size":1286,"mtime":1606222509273,"results":"58","hashOfConfig":"37"},{"size":7199,"mtime":1606686078568,"results":"59","hashOfConfig":"37"},{"size":4054,"mtime":1606686078956,"results":"60","hashOfConfig":"37"},{"size":4124,"mtime":1606222509301,"results":"61","hashOfConfig":"37"},{"size":1714,"mtime":1606222509337,"results":"62","hashOfConfig":"37"},{"size":1079,"mtime":1606222509361,"results":"63","hashOfConfig":"37"},{"size":5442,"mtime":1606607688447,"results":"64","hashOfConfig":"37"},{"size":652,"mtime":1606607688451,"results":"65","hashOfConfig":"37"},{"size":649,"mtime":1606265489301,"results":"66","hashOfConfig":"37"},{"size":4824,"mtime":1606676035956,"results":"67","hashOfConfig":"37"},{"size":1655,"mtime":1606676035956,"results":"68","hashOfConfig":"37"},{"size":1297,"mtime":1606607688447,"results":"69","hashOfConfig":"37"},{"size":1549,"mtime":1606608400043,"results":"70","hashOfConfig":"37"},{"size":674,"mtime":1606682194207,"results":"71","hashOfConfig":"37"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"sxwrn1",{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/leandro/MyStuff/React/this_secretV_clean/FrontendSV/src/App.js",[],"/home/leandro/MyStuff/React/this_secretV_clean/FrontendSV/src/commons/alerts/toast.js",[],"/home/leandro/MyStuff/React/this_secretV_clean/FrontendSV/src/commons/players/players.js",[],"/home/leandro/MyStuff/React/this_secretV_clean/FrontendSV/src/index.js",[],"/home/leandro/MyStuff/React/this_secretV_clean/FrontendSV/src/pages/changeProfile/changeProfile.js",[],"/home/leandro/MyStuff/React/this_secretV_clean/FrontendSV/src/pages/creategame/PageCreateGame.js",[],"/home/leandro/MyStuff/React/this_secretV_clean/FrontendSV/src/pages/game/Game.js",["150","151"],"/home/leandro/MyStuff/React/this_secretV_clean/FrontendSV/src/pages/game/components/Board.js",["152"],"import React, {useEffect, useState} from 'react';\nimport axios from 'axios';\nimport configData from '../../../config.json';\nimport PopupChaos from './popupChaos';\nimport './Board.css';\n\nconst Board = ({gameId, showChaos, chaosProclam}) => {\n  const [boardInfo, setBoardInfo] = useState({});\n  const [chaosPopupShow, setChaosPopupShow] = useState(false);\n\n  useEffect(() => {\n    const getBoardInfo = () => {\n      const usertoken = localStorage.getItem('user');\n      axios.get(configData.API_URL + '/games/' + gameId + '/board', {\n        headers: {\n            'Authorization': `Bearer ${JSON.parse(usertoken).access_token}`\n          }\n      })\n      .then(res => {\n        if(res.status === 200) {\n          setBoardInfo(res.data);\n        }\n      })\n      .catch(error => {\n        console.log(error)\n      })\n    }\n\n    console.log(\"Board, showChaos: \", showChaos);\n    console.log(\"Board, chaosPopupShos: \", chaosPopupShow);\n    if(showChaos !== chaosPopupShow) {\n      setChaosPopupShow(true);\n      setTimeout(() => {\n        setChaosPopupShow(false);\n      }, 5000);\n    }\n\n    const timer = setInterval(() => {\n      getBoardInfo();\n    }, 2000);\n\n    return () => clearInterval(timer)\n  }, [])\n\n  const spellsInfo = boardInfo === undefined || \n                     boardInfo.spell_fields === undefined ? (\n    \"Loading spells\"\n  ) : (\n    boardInfo.spell_fields.map((spell, index) => {\n      return (\n        <li className=\"spell-container\" key={index}>\n          { spell === \"\" || index === boardInfo.spell_fields.length - 1 ? (\n              null\n            ) : (\n              <div>\n                <h2 className=\"death-ammount\">{index + 1} : </h2>\n                <h2 className=\"header\">\n                  {spell.toUpperCase()}\n                </h2>\n              </div>\n            )\n          }\n        </li>\n      )\n    })\n  )\n\n  return (\n    <div className=\"Board\">\n    <div className=\"proclamations\">\n      <div className=\"container\">\n        <div className=\"card\">\n          <div className=\"box phoenix-box\">\n            <div className=\"content phoenix-content\">\n              <h3>Phoenix Order</h3>\n              <h2>{ boardInfo ? boardInfo.po_proc : \"0\"}</h2>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"container\">\n        <div className=\"card\">\n          <div className=\"box death-box\">\n            <div className=\"content death-content\">\n              <h3>Death Eater</h3>\n              <h2>{ boardInfo ? boardInfo.de_proc : \"0\"}</h2>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"container\">\n        <div className=\"card\">\n          <div className=\"box chaos-box\">\n            <div className=\"content chaos-content\">\n              <h3>Chaos Counter</h3>\n              <h2>{ boardInfo ? boardInfo.caos : \"0\"}</h2>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div className=\"spells-info\">\n      <ul>\n        <h2 className=\"spell-info-header\">\n          SPELLS\n        </h2>\n        { spellsInfo }\n        <h3 className=\"next-spell\">\n          Next: { \n            boardInfo === undefined || boardInfo.spell_fields === undefined ? \n            \" \"\n            : (boardInfo.spell_fields[boardInfo.de_proc]) ? (\n              boardInfo.spell_fields[boardInfo.de_proc].toUpperCase()\n            ) : \" \" }\n        </h3>\n      </ul>\n    </div>\n    <div className=\"chaos-popup\">\n    {\n      chaosPopupShow ? (\n        <PopupChaos \n          open={true}\n          proclam={chaosProclam}\n        />\n      ) : (\n        null\n      )\n    }\n    </div>\n  </div>\n  )\n}\n\nexport default Board\n","/home/leandro/MyStuff/React/this_secretV_clean/FrontendSV/src/pages/game/components/CastSpell.js",[],"/home/leandro/MyStuff/React/this_secretV_clean/FrontendSV/src/pages/game/components/ChooseHeadmaster.js",[],"/home/leandro/MyStuff/React/this_secretV_clean/FrontendSV/src/pages/game/components/DiscardCard.js",["153"],"import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport configData from '../../../config.json';\nimport { getMyPlayer } from '../../../commons/players/players';\nimport './DiscardCard.css';\n\nconst DiscardCard = ({gameId, ministerId}) => {\n  const [cards, setCards] = useState([]);\n  const [myPlayer, setMyPlayer] = useState({});\n\n  const getCards = () => {\n    const usertoken = localStorage.getItem('user');\n    axios.get(configData.API_URL + '/games/' + gameId + '/proclamations', {\n      headers: {\n          'Authorization': `Bearer ${JSON.parse(usertoken).access_token}` \n        }\n      })\n      .then(res => {\n        if(res.status === 200) {\n          setCards(res.data.data);\n        }\n      })\n      .catch(error => {\n        console.log(error)\n      })\n  }\n\n  const choose = (e) => {\n    let choice = e.target.className.split(' ')[0];\n    const usertoken = localStorage.getItem('user');\n    axios.post(configData.API_URL + '/games/' + gameId + '/proclamations',\n      { card: choice }, {\n        headers: {\n            'Authorization': `Bearer ${JSON.parse(usertoken).access_token}` \n          }\n        })\n      .then(res => {\n        if (res.status === 200) {\n          console.log(res.status);\n        }\n      })\n      .catch(error => {\n        console.log(error)\n      })\n\n    document.getElementById(\"proc1\").disabled = true;\n    document.getElementById(\"proc2\").disabled = true;\n    document.getElementById(\"proc3\").disabled = true;\n  }\n\n  useEffect(() => {\n    getMyPlayer(gameId)\n      .then(res => {\n        setMyPlayer(res)\n      });\n    getCards();\n  }, [])\n\n  return (\n    <div className=\"discard\">\n    { myPlayer.id === ministerId ? (\n        <div className=\"is-minister\">\n          <h2 className=\"header\">\n            Discard proclamation:\n          </h2>\n          <div className=\"cards\">\n            <button className={cards[0] + \" card left\"} id=\"proc1\"\n              onClick={(e) => {\n                choose(e)\n              }} \n            />\n            <button className={cards[1] + \" card center\"} id=\"proc2\"\n              onClick={(e) => {\n                choose(e)\n              }} \n            />\n            <button className={cards[2] + \" card right\"} id=\"proc3\"\n              onClick={(e) => {\n                choose(e)\n              }} \n            />\n          </div>\n        </div>\n      ) : (\n        <div className=\"not-minister\">\n          <h2 className=\"header\">\n            Minister is discarding proclamation ...\n          </h2>\n        </div>\n      )\n    }   \n    </div>\n  )\n}\n\nexport default DiscardCard\n","/home/leandro/MyStuff/React/this_secretV_clean/FrontendSV/src/pages/game/components/EmitProclamation.js",[],"/home/leandro/MyStuff/React/this_secretV_clean/FrontendSV/src/pages/game/components/GameOver.js",[],"/home/leandro/MyStuff/React/this_secretV_clean/FrontendSV/src/pages/game/components/PlayerList.js",[],"/home/leandro/MyStuff/React/this_secretV_clean/FrontendSV/src/pages/game/components/ShowRole.js",["154"],"import React, {useState, useEffect} from 'react';\nimport axios from 'axios';\nimport jwt_decode from 'jwt-decode';\nimport configData from '../../../config.json';\nimport './ShowRole.css'\nimport morti from '../assets/Wiborita.png';\nimport phoenix from '../assets/Fenix.png';\nimport volde from '../assets/moldem2.png';\n\nconst ShowRole = ({gameId, gameInfo}) => {\n  const [rolePlayer, setRolePlayer] = useState([])\n  const [meAlias, setMeAlias] = useState(\"\")\n\n  var idPlayer = 0\n  const usertoken = localStorage.getItem('user');\n  if(usertoken) {\n    idPlayer = jwt_decode(usertoken).sub.id;\n  }\n\n  useEffect(() => {\n    const getPlayers = () => {\n      const usertoken = localStorage.getItem('user')\n      axios.get(`${configData.API_URL}/games/${gameId}/players`, {\n          headers: {\n              'Authorization': `Bearer ${JSON.parse(usertoken).access_token}`\n          }\n      }).then(response => {\n        if(response.status === 200){\n          setRolePlayer(response.data.data.find(\n            player => player.user.id === idPlayer\n          ))\n          setMeAlias(response.data.data.find(\n            player => player.user.id === idPlayer\n          ).user.useralias)\n        }\n      })\n      .catch(error => {\n        console.log(error)\n      })\n    }\n\n    getPlayers()\n  }, [gameInfo.phase])\n\n  return(\n    <div className={rolePlayer.alive\n        ? `BoxShadow myRole cust`\n        : `BoxShadow myRole cust dead`\n      }>\n      { rolePlayer.is_voldemort\n        ? <div style={{position: 'relative'}}>\n            <img className=\"imgDivRole volde\" src={volde} alt=\"volde\" />\n          </div>\n        : null\n      }\n\n      <div className=\"hDivRole my\">\n        <li\n          className=\"hDivRole\"\n          style={{fontWeight: 'bold', fontSize: '20px', paddingTop: '8%'}}>\n          {`${meAlias}`}\n        </li>\n        <li\n          className=\"hDivRole\"\n          style={{paddingTop: '10%'}}>\n          {`${rolePlayer.role}`.toUpperCase()}\n        </li>\n        <li\n          style={{fontWeight: 'bold'}}\n          className=\"hDivRole\" >\n          { rolePlayer.is_voldemort\n            ? `Voldemort`\n            : \"\"\n          }\n        </li>\n      </div>\n      <div>\n        { (`${rolePlayer.role}`.toUpperCase() === \"PHOENIX ORDER\")\n          ? <img className=\"imgDivRole\" src={phoenix} alt=\"phoenix\" />\n          : <img className=\"imgDivRole\" src={morti} alt=\"morti\" />\n        }\n      </div>\n      { !rolePlayer.alive\n        ? <div className=\"BoxShadowDead dead\">\n            <li\n              className=\"hDivRoleDead\"\n              style={{fontWeight: 'bold', fontSize: '30px'}}>\n              DEAD\n            </li>\n          </div>\n        : null\n      }\n    </div>\n  )\n}\nexport default ShowRole;\n","/home/leandro/MyStuff/React/this_secretV_clean/FrontendSV/src/pages/game/components/Vote.js",[],"/home/leandro/MyStuff/React/this_secretV_clean/FrontendSV/src/pages/game/components/spells/AvadaKedavra.js",[],"/home/leandro/MyStuff/React/this_secretV_clean/FrontendSV/src/pages/game/components/spells/Divination.js",[],"/home/leandro/MyStuff/React/this_secretV_clean/FrontendSV/src/pages/invite/inviteJoin.js",["155"],"import React, {useState, useEffect} from 'react';\nimport { Link } from 'react-router-dom'; // prueba\nimport axios from 'axios';\nimport jwt_decode from 'jwt-decode';\nimport configData from '../../config.json';\n\nconst InviteJoin = ({gameJoin}) => {\n  const [initPartida, setInitPartida] = useState(false);\n  const [gameInfo, setGameInfo] = useState([]);\n  const [countPlayer, setCountPlayer] = useState(0);\n  const [error, setError] = useState([false, '']);\n  const [listPlayers, setListPlayers] = useState([]);\n\n  var idPlayer = 0\n  const usertoken = localStorage.getItem('user');\n  if(usertoken) {\n    idPlayer = jwt_decode(usertoken).sub.id;\n  }\n\n  const getPlayers = (e) => {\n      axios.get(`${configData.API_URL}/games/${gameJoin}/players`, {\n        headers: {\n          'Authorization': `Bearer ${JSON.parse(usertoken).access_token}`\n        }\n      }).then(response => {\n        if(response.status === 200){\n          setCountPlayer(response.data.data.length)\n          setListPlayers(response.data.data)\n          let lengthGame = response.data.data.length\n          let maxPlayerG = e.player_amount\n\n          let doIExist = [response.data.data.find(\n                            player => player.user.id === idPlayer)]\n                         .includes(undefined)\n\n          if (lengthGame === maxPlayerG) {\n            if (e.created_by !== idPlayer && doIExist) {\n              setError([true, \"Full room\"])\n            }\n          }\n        }\n      }).catch(error => {\n        if (error) {\n          console.log(\"Error 401 Player\");\n        }\n      })\n  }\n\n  useEffect(() => {\n    let join = usertoken !== null\n    let init = false\n    if (join) {\n      const getGameInfo = () => {\n        const usertoken = localStorage.getItem('user')\n        axios.get(`${configData.API_URL}/games/${gameJoin}`, {\n          headers: {\n            'Authorization': `Bearer ${JSON.parse(usertoken).access_token}`\n          }\n        })\n        .then(res => {\n          // console.log(res)\n          if(res.status === 200) {\n            setGameInfo(res.data)\n            setInitPartida(res.data.started)\n\n            init = res.data.started\n            getPlayers(res.data)\n            if (init) {\n              setError([true, \"Game stated\"])\n            }\n          }\n        }).catch(error => {\n          if (error) {\n            console.log(\"Error 401 Info\");\n          }\n        });\n      }\n      getGameInfo()\n    }\n  },[initPartida])\n\n  const jGame = () => {\n    let join = usertoken !== null\n    if (join) {\n      let lengthGame = countPlayer\n      let maxPlayerG = gameInfo.player_amount\n      let doIExist = [listPlayers.find(\n                        player => player.user.id === idPlayer)]\n                     .includes(undefined)\n\n      if (lengthGame !== maxPlayerG) {\n        if (gameInfo.created_by !== idPlayer && doIExist) {\n          const usertoken = localStorage.getItem('user')\n\n          axios.post(`${configData.API_URL}/games/${gameJoin}/join`,({}),{\n            headers: {\n              'Authorization': `Bearer ${JSON.parse(usertoken).access_token}`\n            }\n          }).then(response => {\n            if (response.status === 200) {\n              const response_id = response.data\n              console.log(response_id);\n            }\n          })\n          .catch(error => {\n            console.log(error)\n          })\n        }\n      }\n    }\n  }\n\n  return (\n    <div>\n      <div className=\"modal\">\n          <div className=\"modal-main\">\n            <div>\n              <h2>{`Game: ${gameInfo.name}`}</h2>\n              <p>{`Players: ${countPlayer}/${gameInfo.player_amount}`}</p>\n              <p className= \"pCustom\" style={{fontSize:\"18px\", color: \"red\"}}>\n                {error[0] ? error[1] : \"_\"}\n              </p>\n              <div style={{paddingTop: \"18px\"}}>\n                { error[0] ?\n                  \"\"\n                  : (<button className=\"buttonFound bttmodal\" onClick={jGame}>\n                        <Link className=\"linked\" to={{\n                            pathname: '/game',\n                            state: {\n                                gameId: gameJoin\n                            }\n                        }}>Join</Link>\n                      </button>)\n                }\n                <button className=\"buttonFound bttmodal\">\n                  <Link className=\"linked\" to={{\n                      pathname: '/home',\n                      state: {\n                          gameId: gameJoin\n                      }\n                  }}>Close</Link>\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n    </div>\n  )\n}\nexport default InviteJoin;\n","/home/leandro/MyStuff/React/this_secretV_clean/FrontendSV/src/pages/invite/inviteURL.js",[],"/home/leandro/MyStuff/React/this_secretV_clean/FrontendSV/src/pages/joinagame/Lists.js",[],"/home/leandro/MyStuff/React/this_secretV_clean/FrontendSV/src/pages/joinagame/modal.js",[],"/home/leandro/MyStuff/React/this_secretV_clean/FrontendSV/src/pages/lobby/Lobby.js",["156","157","158"],"import React, {useState, useEffect} from 'react';\nimport { Redirect } from 'react-router';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport jwt_decode from 'jwt-decode';\nimport {CopyToClipboard} from 'react-copy-to-clipboard';\nimport configData from '../../config.json';\nimport Game from '../game/Game'\nimport './LobbyStyles.css'\nimport '../joinagame/styleSearch.css'\n\nconst LobbyPage = (props) => {\n  const [listPlayers, setListPlayers] = useState([]);\n  const [initPartida, setInitPartida]= useState(false);\n  const [nameGame, setNameGame] = useState('')\n  const [endGame, setEndGame]= useState(false);\n  const [userCreate, setUserCreate] = useState(0);\n  const [countPlayer, setCountPlayer]= useState(0);\n  const [message, setMessage] = useState('');\n  const [copySuccess, setCopySuccess] = useState('');\n  const [copyState, setCopyState] = useState(false);\n\n  let idGame = parseInt(props.location.state.gameId);\n\n  var idPlayer = 0\n  const usertoken = localStorage.getItem('user');\n  if(usertoken) {\n    idPlayer = jwt_decode(usertoken).sub.id;\n  }\n\n  useEffect(() => {\n    const getPlayers = () => {\n      axios.get(`${configData.API_URL}/games/${idGame}/players`, {\n          headers: {\n              'Authorization': `Bearer ${JSON.parse(usertoken).access_token}`\n          }\n      }).then(response => {\n        if(response.status === 200){\n          setListPlayers(response.data.data)\n          setCountPlayer(response.data.data.length)\n        }\n      })\n      .catch(error => {\n        setEndGame(true)\n      })\n    }\n\n    const timer = setInterval(() => {\n      getPlayers();\n      if (initPartida) {\n        clearInterval(timer);\n      }\n    }, 2000);\n\n    return () => clearInterval(timer)\n  }, [initPartida])\n\n  useEffect(() => {\n    const getGameInfo = () => {\n        axios.get(`${configData.API_URL}/games/${idGame}`, {\n          headers: {\n            'Authorization': `Bearer ${JSON.parse(usertoken).access_token}`\n          }\n        })\n        .then(res => {\n          if(res.status === 200) {\n            setInitPartida(res.data.started)\n            setUserCreate(res.data.created_by)\n            setNameGame(res.data.name)\n          }\n        }).catch( error => {\n          setEndGame(true)\n        })\n    }\n    const timer = setInterval(() => {\n      getGameInfo();\n      if (initPartida) {\n        clearInterval(timer);\n      }\n    }, 2000);\n\n    return () => clearInterval(timer)\n  }, [initPartida])\n\n  const gameStart = () => {\n    if (countPlayer >= 5) {\n      axios.post(`${configData.API_URL}/games/${idGame}/start`,({}),{\n        headers: {\n          'Authorization': `Bearer ${JSON.parse(usertoken).access_token}`\n        }\n      }).catch(error => {\n        console.log(error)\n      })\n    } else {\n      setMessage(\"Insufficient players, the minimum is 5\")\n      setTimeout(\n        () => setMessage(\" \"), 4500\n      );\n    }\n  }\n\n  const exitLobby = () => {\n    if (idPlayer === userCreate) {\n      endUserCreate()\n    } else {\n      axios.post(`${configData.API_URL}/games/${idGame}/exit`,({}),{\n        headers: {\n          'Authorization': `Bearer ${JSON.parse(usertoken).access_token}`\n        }\n      }).catch(error => {\n        console.log(error)\n      })\n    }\n  }\n\n  const endUserCreate = () => {\n    axios.delete(`${configData.API_URL}/games/${idGame}/delete`, {\n      headers: {\n        'Authorization': `Bearer ${JSON.parse(usertoken).access_token}`\n      }\n    }).then(response => {\n      if(response.status === 200){\n        setEndGame(true)\n      }\n    })\n    .catch(error => {\n      console.log(error)\n    })\n  }\n\n  useEffect(() => {\n    setCopySuccess(`http://localhost:3000/game/invite?game=${idGame}`)\n  }, [idPlayer])\n\n  const copyToClipboard = () => {\n    console.log(copyState);\n    setCopyState(!copyState)\n    setTimeout(\n      () => setCopyState(false), 1500\n    );\n  };\n\n  return (\n    <div>\n      { endGame ? <Redirect to=\"/home\" /> :\n        ( initPartida ?\n          <div>\n            <Game gameId={parseInt(props.location.state.gameId)}/>\n          </div>\n          : <div>\n              <div className=\"divContentTittle\">\n                <div className=\"divCreateJoin tittle\">\n                  <div className=\"topBar\">\n                    <div className=\"dropdown prim home back\">\n                      <button className=\"dropbtn\">Menu\n                        <i className=\"fa fa-caret-down\"></i>\n                      </button>\n                      <div className=\"dropdown-content\">\n                        <div>\n                          <Link\n                            className=\"liStyle hom\"\n                            to=\"/home\">\n                            {'Home'}\n                          </Link>\n                        </div>\n                        <div>\n                          <Link\n                            className=\"liStyle hom\"\n                            onClick={exitLobby}\n                            to=\"/home\">\n                            Exit Game\n                          </Link>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div\n                    className={\n                      \"divContentTittle url\" + (copyState ? ' copied' : '')\n                    }\n                    style={{resize: \"none\"}}>\n                    <p className=\"pUrl\">\n                      Invite: {copySuccess}\n                    </p>\n                    <CopyToClipboard text={copySuccess}>\n                      <button\n                        onClick={copyToClipboard}\n                        className=\"buttonInvi\">\n                        { copyState ? \"Copied\" : \"Copy\" }\n                      </button>\n                    </CopyToClipboard>\n                  </div>\n\n                </div>\n              </div>\n\n              <h1 className=\"h1TittleLobby title\">Lobby {nameGame}</h1>\n              <h4 className=\"h1TittleLobby error\">{message}</h4>\n              <div className=\"divCreateJoin lobby-1\">\n                {userCreate === idPlayer\n                  ? <div className=\"button-container-1 button lobby\">\n                      <span className=\"mas\">Start Game</span>\n                      <button\n                        id=\"work\"\n                        type=\"button\"\n                        name=\"Hover\"\n                        onClick={gameStart}>\n                          Start Game\n                      </button>\n                    </div>\n                  : <h3 className = \"divWaiting\">Waiting to start</h3>\n                 }\n              </div>\n              <label>\n              <div className=\"divCreateJoin lobby\">\n                { listPlayers.sort(\n                    function (a,b) {\n                      var x = a.id < b.id? -1:1;\n                      return x\n                    }).map( player =>\n                      <li\n                        key={player.user.id}\n                        className=\"liStyle fom-popup-BoxShadow custom\">\n                          {player.user.username}\n                      </li>\n                  )}\n              </div>\n              </label>\n          </div>\n        )\n      }\n      </div>\n  )\n}\nexport default LobbyPage;\n","/home/leandro/MyStuff/React/this_secretV_clean/FrontendSV/src/pages/login/login.js",[],"/home/leandro/MyStuff/React/this_secretV_clean/FrontendSV/src/pages/register/register.js",[],"/home/leandro/MyStuff/React/this_secretV_clean/FrontendSV/src/principalpages/createAndjoinAndChang.js",[],"/home/leandro/MyStuff/React/this_secretV_clean/FrontendSV/src/principalpages/registerAndlogin.js",[],"/home/leandro/MyStuff/React/this_secretV_clean/FrontendSV/src/pages/game/components/ShowResultVote.js",["159","160"],"import React, { useEffect, useState } from 'react';\nimport { getPlayers } from '../../../commons/players/players';\nimport PopupVote from './popupVote';\nimport lumos from '../assets/lumos.png';\nimport nox from '../assets/nox.png';\n\nconst ShowResultVote = ({gameId, gameInfo}) => {\n  const [players, setPlayers] = useState([]);\n  const [resultVote, setResultVote] = useState(\"\");\n  const [countVotes, setCountVotes] = useState([0, -1]);\n  const [showResult, setShowResult] = useState([false, 0]);\n  const [headM, setHeadM] = useState([])\n\n  const getP = () => {\n    getPlayers(gameId)\n      .then(res => {\n        setPlayers(res)\n      });\n  }\n\n  const searchCurrent2 = (e) => {\n    let resultVotePlayer\n    if (resultVote !== undefined) {\n      if (gameInfo.phase === 'propose') {\n        resultVotePlayer = \" \"\n      } else {\n        let h = resultVote.find(\n          playerR => playerR.player === e\n        )\n        resultVotePlayer = h != null ? h.vote : \" \"\n      }\n    }\n    return(resultVotePlayer)\n  }\n\n  useEffect(() => {\n    getP();\n  }, [gameInfo.phase]);\n\n  useEffect(() => {\n    if (gameInfo !== undefined && gameInfo.phase !== 'propose') {\n      if (gameInfo.phase !== 'propose') {\n        if (gameInfo.votes !== undefined && showResult[1] === 0) {\n          setResultVote(gameInfo.votes)\n          if (countVotes[0] < gameInfo.votes.length) {\n            const alivePlayers = players.filter((item) => item.alive)\n            setCountVotes([gameInfo.votes.length, alivePlayers.length])\n          } else if(countVotes[0] === countVotes[1] && showResult[1] === 0) {\n              setShowResult([true, 1])\n              let head = players.find(\n                  playerR => playerR.id === parseInt(gameInfo.headmaster)\n              )\n              let minister = players.find(\n                  playerR => playerR.id === parseInt(gameInfo.minister)\n              )\n              setHeadM([head, minister])\n              getP()\n              setTimeout(() => (\n                  setShowResult([false, 1])), 4000\n              )\n              setTimeout(() => (\n                  setCountVotes([0, -1])), 10000\n              )\n            }\n        }\n      }\n    } else if (gameInfo.phase === 'propose') {\n          setShowResult([false, 0])\n          setCountVotes([0, -1])\n          setHeadM([])\n    }\n  }, [gameInfo]);\n\n\n  return (\n    <div>\n      { showResult[0]\n        ? <PopupVote open={true} headM={headM}></PopupVote>\n        : \" \"\n      }\n      {players.sort(\n        function(a,b){\n          var x = a.id < b.id? -1:1;\n          return x\n        }).map( player =>\n          <div\n            className=\"fom-popup-BoxShadow custom game\"\n            style={ player.alive\n              ? {color: 'white'}\n              : {background: '#672A24', fontWeight: 'bold',\n                fontSize: '20px', opacity: '0.4'}\n            }\n            key={player.id}>\n            <div className=\"hDivPlayers cust\">\n              <div className=\"hDivPlayers votes\">\n                <li style={{fontWeight: 'bold'}}>\n                  {\n                    (() => {\n                      if (gameInfo !== undefined) {\n                        if (gameInfo.phase === 'propose') {\n                          if (player.current_position === 'minister') {\n                            return \"CAND. MINISTER\"\n                          }\n                        } else if (gameInfo.phase === 'vote') {\n                          if (parseInt(gameInfo.headmaster) === player.id) {\n                            return \"CAND. HEADMASTER\"\n                          }\n                          if (player.current_position === 'minister') {\n                            return \"CAND. MINISTER\"\n                          }\n                        } else {\n                            return (\n                              (player.current_position) !== \"\" ?\n                                (player.current_position).toUpperCase() :\n                                <p> </p>\n                            )\n                        }\n                      }\n                  })()\n                  }\n                </li>\n                <li style={player.alive\n                    ? {color: 'white'}\n                    : {fontWeight: 'bold', fontSize: '20px'}}>\n                    {player.user.useralias}\n                </li>\n              </div>\n              <div style={{}}>\n                { countVotes[0] === countVotes[1] ?\n                    (() => {\n                      if (resultVote !== \"\") {\n                        let result = searchCurrent2(player.id)\n                        if (result === true) {\n                          return (\n                            <img className=\"imgDivVote\"\n                              src={lumos}\n                              alt=\"lumos\"/>\n                          )\n                        } else if (result === \" \") {\n                          return (\n                            <p> </p>\n                          )\n                        } else if (result === false) {\n                          return (\n                            <img className=\"imgDivVote\"\n                              src={nox}\n                              alt=\"nox\"/>\n                          )\n                        }\n                      }\n                  })()\n                  : \"\"\n              }\n              </div>\n            </div>\n          </div>\n      )}\n    </div>\n  )\n}\nexport default ShowResultVote\n","/home/leandro/MyStuff/React/this_secretV_clean/FrontendSV/src/pages/game/components/popupVote.js",[],"/home/leandro/MyStuff/React/this_secretV_clean/FrontendSV/src/pages/verification/verification.js",[],"/home/leandro/MyStuff/React/this_secretV_clean/FrontendSV/src/pages/game/components/spells/Crucio.js",[],"/home/leandro/MyStuff/React/this_secretV_clean/FrontendSV/src/pages/game/components/spells/Imperius.js",[],"/home/leandro/MyStuff/React/this_secretV_clean/FrontendSV/src/pages/game/chat/sendmessage.js",["161"],"import React,{useState} from 'react';\nimport axios from 'axios';\nimport configData from '../../../config.json';\n\nconst SendMessage = ({gameId}) => {\n  const [msg, setMsg] = useState('')\n  //contemplar los playrs deads\n  const [error, setError] = useState('')\n\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    if(!error){\n      const usertoken = localStorage.getItem('user')\n      const infotosend = {\n        \"content\" : msg    \n      }\n      axios.post(configData.API_URL + '/games/' + gameId + '/messages', infotosend, {\n        headers: {\n          'Authorization': `Bearer ${JSON.parse(usertoken).access_token}` \n        }\n      }).then(response => { \n        if(response.status === 200){\n        setMsg('')\n        }\n      })\n      .catch(error => {\n        console.log(error)\n      })\n    }\n  } \n\n  const handleOnchange = (e) => {\n    if(e.target.name === \"message\"){\n      setMsg(e.target.value)\n    }\n  }\n\n  return( \n    <div>\n      <form onSubmit={onSubmit}>\n        <input  \n          id='messageC'\n          type='text'\n          name='message'\n          placeholder='Write something'\n          value={msg}\n          onChange= {handleOnchange}\n          required\n        />\n        <button type='submit' >Send</button>\n      </form>\n    </div>\n  )\n\n}\nexport default SendMessage;","/home/leandro/MyStuff/React/this_secretV_clean/FrontendSV/src/pages/game/chat/windowChat.js",["162","163"],"import React,{useState, useEffect} from 'react';\nimport axios from 'axios';\nimport configData from '../../../config.json';\nimport { MessageBox, Avatar } from 'react-chat-elements'\nimport 'react-chat-elements/dist/main.css';\n\n\nconst WindowChat = ({gameId}) => {\n  const [messages, setMessages] = useState([]);\n  \n  useEffect(()=>{\n    const getMessages = () => {\n      const usertoken = localStorage.getItem('user');\n      axios.get(configData.API_URL + '/games/' + gameId + \"/messages\", {\n        headers: {\n            'Authorization': `Bearer ${JSON.parse(usertoken).access_token}`\n          }\n      })\n      .then(res => {\n        if(res.status === 200) {\n          //estaria bueno que me diera en la respuesta el nombre, me trae el player pero sin nombre ni nada.\n          const response = res.data.data.map( messageAndPlayer => messageAndPlayer.content)\n          setMessages(...messages, response)\n          \n        }\n      })\n      .catch(error => {\n        console.log( error)\n      })\n    }\n    const timer = setInterval(() => {\n      getMessages();\n    }, 2000);\n\n    return () => clearInterval(timer)\n  }, [])\n\n  \n\n  return(\n      messages.map(\n        entry =>\n          <div key={entry.id}>\n            <MessageBox \n              type='text'\n              text={entry}\n              avatar = \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSW4H2aNRj447pJrUzxZ1fjETKrr9_cGu7egqAaA5LHs6a0JeT79ysKjDwow0ldlmD8Dgqia6PZeERLAWC0jKwACERtiObB5Wo&usqp=CAU&ec=45730948\"\n            />\n          </div>)\n  )\n\n}\n\nexport default WindowChat;","/home/leandro/MyStuff/React/this_secretV_clean/FrontendSV/src/pages/game/components/popupChaos.js",[],{"ruleId":"164","severity":1,"message":"165","line":15,"column":10,"nodeType":"166","messageId":"167","endLine":15,"endColumn":21},{"ruleId":"168","severity":1,"message":"169","line":65,"column":6,"nodeType":"170","endLine":65,"endColumn":14,"suggestions":"171"},{"ruleId":"168","severity":1,"message":"172","line":43,"column":6,"nodeType":"170","endLine":43,"endColumn":8,"suggestions":"173"},{"ruleId":"168","severity":1,"message":"174","line":57,"column":6,"nodeType":"170","endLine":57,"endColumn":8,"suggestions":"175"},{"ruleId":"168","severity":1,"message":"176","line":43,"column":6,"nodeType":"170","endLine":43,"endColumn":22,"suggestions":"177"},{"ruleId":"168","severity":1,"message":"178","line":80,"column":5,"nodeType":"170","endLine":80,"endColumn":18,"suggestions":"179"},{"ruleId":"168","severity":1,"message":"180","line":56,"column":6,"nodeType":"170","endLine":56,"endColumn":19,"suggestions":"181"},{"ruleId":"168","severity":1,"message":"180","line":83,"column":6,"nodeType":"170","endLine":83,"endColumn":19,"suggestions":"182"},{"ruleId":"168","severity":1,"message":"183","line":133,"column":6,"nodeType":"170","endLine":133,"endColumn":16,"suggestions":"184"},{"ruleId":"168","severity":1,"message":"185","line":38,"column":6,"nodeType":"170","endLine":38,"endColumn":22,"suggestions":"186"},{"ruleId":"168","severity":1,"message":"187","line":72,"column":6,"nodeType":"170","endLine":72,"endColumn":16,"suggestions":"188"},{"ruleId":"164","severity":1,"message":"189","line":8,"column":17,"nodeType":"166","messageId":"167","endLine":8,"endColumn":25},{"ruleId":"164","severity":1,"message":"190","line":4,"column":22,"nodeType":"166","messageId":"167","endLine":4,"endColumn":28},{"ruleId":"168","severity":1,"message":"191","line":36,"column":6,"nodeType":"170","endLine":36,"endColumn":8,"suggestions":"192"},"no-unused-vars","'MessageList' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'gameStatus'. Either include it or remove the dependency array.","ArrayExpression",["193"],"React Hook useEffect has missing dependencies: 'chaosPopupShow', 'gameId', and 'showChaos'. Either include them or remove the dependency array.",["194"],"React Hook useEffect has missing dependencies: 'gameId' and 'getCards'. Either include them or remove the dependency array.",["195"],"React Hook useEffect has missing dependencies: 'gameId' and 'idPlayer'. Either include them or remove the dependency array.",["196"],"React Hook useEffect has missing dependencies: 'gameJoin', 'getPlayers', and 'usertoken'. Either include them or remove the dependency array.",["197"],"React Hook useEffect has missing dependencies: 'idGame' and 'usertoken'. Either include them or remove the dependency array.",["198"],["199"],"React Hook useEffect has a missing dependency: 'idGame'. Either include it or remove the dependency array.",["200"],"React Hook useEffect has a missing dependency: 'getP'. Either include it or remove the dependency array.",["201"],"React Hook useEffect has missing dependencies: 'countVotes', 'getP', 'players', and 'showResult'. Either include them or remove the dependency array.",["202"],"'setError' is assigned a value but never used.","'Avatar' is defined but never used.","React Hook useEffect has missing dependencies: 'gameId' and 'messages'. Either include them or remove the dependency array. You can also do a functional update 'setMessages(m => ...)' if you only need 'messages' in the 'setMessages' call.",["203"],{"desc":"204","fix":"205"},{"desc":"206","fix":"207"},{"desc":"208","fix":"209"},{"desc":"210","fix":"211"},{"desc":"212","fix":"213"},{"desc":"214","fix":"215"},{"desc":"214","fix":"216"},{"desc":"217","fix":"218"},{"desc":"219","fix":"220"},{"desc":"221","fix":"222"},{"desc":"223","fix":"224"},"Update the dependencies array to be: [gameId, gameStatus]",{"range":"225","text":"226"},"Update the dependencies array to be: [chaosPopupShow, gameId, showChaos]",{"range":"227","text":"228"},"Update the dependencies array to be: [gameId, getCards]",{"range":"229","text":"230"},"Update the dependencies array to be: [gameId, gameInfo.phase, idPlayer]",{"range":"231","text":"232"},"Update the dependencies array to be: [gameJoin, getPlayers, initPartida, usertoken]",{"range":"233","text":"234"},"Update the dependencies array to be: [idGame, initPartida, usertoken]",{"range":"235","text":"236"},{"range":"237","text":"236"},"Update the dependencies array to be: [idGame, idPlayer]",{"range":"238","text":"239"},"Update the dependencies array to be: [gameInfo.phase, getP]",{"range":"240","text":"241"},"Update the dependencies array to be: [countVotes, gameInfo, getP, players, showResult]",{"range":"242","text":"243"},"Update the dependencies array to be: [gameId, messages]",{"range":"244","text":"245"},[2261,2269],"[gameId, gameStatus]",[1202,1204],"[chaosPopupShow, gameId, showChaos]",[1604,1606],"[gameId, getCards]",[1284,1300],"[gameId, gameInfo.phase, idPlayer]",[2421,2434],"[gameJoin, getPlayers, initPartida, usertoken]",[1734,1747],"[idGame, initPartida, usertoken]",[2437,2450],[3685,3695],"[idGame, idPlayer]",[1048,1064],"[gameInfo.phase, getP]",[2319,2329],"[countVotes, gameInfo, getP, players, showResult]",[1119,1121],"[gameId, messages]"]